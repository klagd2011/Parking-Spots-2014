
import com.healthmarketscience.jackcess.Database;
import com.healthmarketscience.jackcess.DatabaseBuilder;
import com.healthmarketscience.jackcess.Row;
import com.healthmarketscience.jackcess.Table;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RetrieveSpot.java
 *
 * Created on May 11, 2014, 10:57:22 PM
 */
/**
 *
 * @author s500900
 */
public class RetrieveSpot extends javax.swing.JFrame {

    String spot;

    /** Creates new form RetrieveSpot */
    public RetrieveSpot() {
        initComponents();
        this.setResizable(false);
        this.setTitle("Retrieve Spot");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ReturnButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        getSpot_ID = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        getSpot_name = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ReturnButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\s500900\\Documents\\NetBeansProjects\\OfficialProject\\return.png")); // NOI18N
        ReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        jLabel1.setText("Enter Student's ID:");

        getSpot_ID.setText("Get Spot");
        getSpot_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getSpot_IDActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel2.setText("or");

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        jLabel3.setText("Enter Student's Credentials:");

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel4.setText("First Name:");

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel5.setText("Last Name:");

        getSpot_name.setText("Get Spot");
        getSpot_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getSpot_nameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(getSpot_name)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(84, 84, 84)
                            .addComponent(jLabel5)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(35, 35, 35)
                            .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addContainerGap())
                        .addComponent(jLabel2)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(getSpot_ID))
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                            .addComponent(ReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(getSpot_ID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getSpot_name)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnButtonActionPerformed
        if (RunProgram.currentLot.equals("North Lot")) {
            RunProgram.northLot.show();
        } else if (RunProgram.currentLot.equals("South Lot")) {
            RunProgram.southLot.show();
        } else if (RunProgram.currentLot.equals("Bus Lot")) {
            RunProgram.busLot.show();
        }
        this.dispose();
        RunProgram.getInterface = new RetrieveSpot();
}//GEN-LAST:event_ReturnButtonActionPerformed

    private void getSpot_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getSpot_IDActionPerformed
        String ID_num = this.ID.getText();
        if (RunProgram.currentLot.equals("North Lot")) {
            File database = new File("ParkingSpots.accdb");
            Database db;
            try {
                db = DatabaseBuilder.open(database);
                Table northLot = db.getTable("North Lot");
                boolean found = false;
                for (Row r : northLot) {
                    if (r.get("Student ID").equals(ID_num)) {
                        spot = r.get("Parking Spot").toString();
                        DisplayParkingSpot d = new DisplayParkingSpot(spot);
                        d.show();
                        this.show(false);
                        found = true;
                        break;
                    }
                }
                if (found != true) {
                    JOptionPane.showMessageDialog(null, "Please make sure the ID is correct and in the " + RunProgram.currentLot + ".");
                }
            } catch (IOException ex) {
                Logger.getLogger(RetrieveSpot.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (RunProgram.currentLot.equals("South Lot")) {
            File database = new File("ParkingSpots.accdb");
            Database db;
            try {
                db = DatabaseBuilder.open(database);
                Table southLot = db.getTable("South Lot");
                boolean found = false;
                for (Row r : southLot) {
                    if (r.get("Student ID").equals(ID_num)) {
                        spot = r.get("Parking Spot").toString();
                        DisplayParkingSpot d = new DisplayParkingSpot(spot);
                        d.show();
                        this.show(false);
                        found = true;
                        break;
                    }
                }
                if (found != true) {
                    JOptionPane.showMessageDialog(null, "Please make sure the ID is correct and in the " + RunProgram.currentLot + ".");
                }
            } catch (IOException ex) {
                Logger.getLogger(RetrieveSpot.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (RunProgram.currentLot.equals("Bus Lot")) {
            File database = new File("ParkingSpots.accdb");
            Database db;
            try {
                db = DatabaseBuilder.open(database);
                Table busLot = db.getTable("Bus Lot");
                boolean found = false;
                for (Row r : busLot) {
                    if (r.get("Student ID").equals(ID_num)) {
                        spot = r.get("Parking Spot").toString();
                        DisplayParkingSpot d = new DisplayParkingSpot(spot);
                        d.show();
                        this.show(false);
                        found = true;
                        break;
                    }
                }
                if (found != true) {
                    JOptionPane.showMessageDialog(null, "Please make sure the ID is correct and in the " + RunProgram.currentLot + ".");
                }
            } catch (IOException ex) {
                Logger.getLogger(RetrieveSpot.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_getSpot_IDActionPerformed

    private void getSpot_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getSpot_nameActionPerformed
        String first = this.firstName.getText();
        String last = this.lastName.getText();
        if (RunProgram.currentLot.equals("North Lot")) {
            File database = new File("ParkingSpots.accdb");
            Database db;
            try {
                db = DatabaseBuilder.open(database);
                Table northLot = db.getTable("North Lot");
                boolean found = false;
                for (Row r : northLot) {
                    if (r.get("Last Name").equals(last)&&r.get("First Name").equals(first)) {
                        spot = r.get("Parking Spot").toString();
                        DisplayParkingSpot d = new DisplayParkingSpot(spot);
                        d.show();
                        this.show(false);
                        found = true;
                        break;
                    }
                }
                if (found != true) {
                    JOptionPane.showMessageDialog(null, "Please make sure the names are correct and that the student is in the " + RunProgram.currentLot + ".");
                }
            } catch (IOException ex) {
                Logger.getLogger(RetrieveSpot.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (RunProgram.currentLot.equals("South Lot")) {
            File database = new File("ParkingSpots.accdb");
            Database db;
            try {
                db = DatabaseBuilder.open(database);
                Table southLot = db.getTable("South Lot");
                boolean found = false;
                for (Row r : southLot) {
                    if (r.get("Last Name").equals(last)&&r.get("First Name").equals(first)) {
                        spot = r.get("Parking Spot").toString();
                        DisplayParkingSpot d = new DisplayParkingSpot(spot);
                        d.show();
                        this.show(false);
                        found = true;
                        break;
                    }
                }
                if (found != true) {
                    JOptionPane.showMessageDialog(null, "Please make sure the names are correct and that the student is in the " + RunProgram.currentLot + ".");
                }
            } catch (IOException ex) {
                Logger.getLogger(RetrieveSpot.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (RunProgram.currentLot.equals("Bus Lot")) {
            File database = new File("ParkingSpots.accdb");
            Database db;
            try {
                db = DatabaseBuilder.open(database);
                Table busLot = db.getTable("Bus Lot");
                boolean found = false;
                for (Row r : busLot) {
                    if (r.get("Last Name").equals(last)&&r.get("First Name").equals(first)) {
                        spot = r.get("Parking Spot").toString();
                        DisplayParkingSpot d = new DisplayParkingSpot(spot);
                        d.show();
                        this.show(false);
                        found = true;
                        break;
                    }
                }
                if (found != true) {
                    JOptionPane.showMessageDialog(null, "Please make sure the names are correct and that the student is in the" + RunProgram.currentLot + ".");
                }
            } catch (IOException ex) {
                Logger.getLogger(RetrieveSpot.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_getSpot_nameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new RetrieveSpot().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ID;
    private javax.swing.JButton ReturnButton;
    private javax.swing.JTextField firstName;
    private javax.swing.JButton getSpot_ID;
    private javax.swing.JButton getSpot_name;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField lastName;
    // End of variables declaration//GEN-END:variables
}
