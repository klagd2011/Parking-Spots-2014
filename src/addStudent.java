
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Map;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import com.healthmarketscience.jackcess.Database;
import com.healthmarketscience.jackcess.DatabaseBuilder;
import com.healthmarketscience.jackcess.Table;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * addStudent.java
 *
 * Created on May 7, 2014, 11:40:10 AM
 */
/**
 *
 * @author s500900
 */
public class addStudent extends javax.swing.JFrame {

    /** Creates new form addStudent */
    public addStudent() {
        initComponents();
        fileName.setEditable(false);
        this.setTitle("Add Students");
        canUse = false;
        this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        this.setResizable(false);
    }
    public Scanner in;
    boolean canUse;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChooseFile = new javax.swing.JButton();
        fileName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        ID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addStudent = new javax.swing.JButton();
        addGroup = new javax.swing.JButton();
        ReturnButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ChooseFile.setText("Choose File");
        ChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseFileActionPerformed(evt);
            }
        });

        fileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel2.setText("Enter File Path:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("OR");

        firstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameActionPerformed(evt);
            }
        });

        lastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameActionPerformed(evt);
            }
        });

        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });

        jLabel3.setText("First Name:");

        jLabel4.setText("Last Name:");

        jLabel5.setText("ID Number:");

        addStudent.setText("Add Individual");
        addStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentActionPerformed(evt);
            }
        });

        addGroup.setText("Submit!");
        addGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGroupActionPerformed(evt);
            }
        });

        ReturnButton.setIcon(new javax.swing.ImageIcon("E:\\11th Grade\\Documents\\Documents\\NetBeansProjects\\OfficialProject\\return.png")); // NOI18N
        ReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 206, Short.MAX_VALUE)
                        .addComponent(ReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addGroup)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChooseFile))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addStudent))
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ReturnButton, 0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChooseFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addStudent))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseFileActionPerformed
        JFileChooser choose = new JFileChooser();
        choose.showOpenDialog(null);
        fileName.setText(choose.getSelectedFile().getName());
        if (fileName.getText().split("\\.")[1].equals("txt") && fileName.getText().contains("StudentInformation")) {
            File file = choose.getSelectedFile();
            try {
                in = new Scanner(file);
                canUse = true;
            } catch (FileNotFoundException ex) {
                Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "ERROR, please choose another file.");
        }

    }//GEN-LAST:event_ChooseFileActionPerformed

    private void fileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileNameActionPerformed

    private void firstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameActionPerformed

    private void lastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameActionPerformed

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDActionPerformed

    private void addStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentActionPerformed
        String first = this.firstName.getText();
        String last = this.lastName.getText();
        String ID_num = this.ID.getText();
        if (!first.equals("") && !last.equals("") && !ID_num.equals("")) {
            Person student = new Person(last + ", " + first, ID_num);
            if (RunProgram.currentLot.equals("North Lot")) {
                File database = new File("ParkingSpots.accdb");
                Database db;
                try {
                    db = DatabaseBuilder.open(database);
                    Table northLot = db.getTable("North Lot");
                    RunProgram.northLot.assignSpot(student);
                    northLot.addRow("", student.getID(), student.getLastName(), student.getFirstName(), student.getParkingSpace());
                    JOptionPane.showMessageDialog(null, "Success!\n" + student.getFirstName() + " " + student.getLastName() + " has been added to the " + RunProgram.currentLot+"!");
                    this.firstName.setText("");
                    this.lastName.setText("");
                    this.ID.setText("");

                } catch (IOException ex) {
                    Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (RunProgram.currentLot.equals("South Lot")) {
                File database = new File("ParkingSpots.accdb");
                Database db;
                try {
                    db = DatabaseBuilder.open(database);
                    Table southLot = db.getTable("South Lot");
                    RunProgram.southLot.assignSpot(student);
                    southLot.addRow("", student.getID(), student.getLastName(), student.getFirstName(), student.getParkingSpace());
                    JOptionPane.showMessageDialog(null, "Success!\n" + student.getFirstName() + " " + student.getLastName() + " has been added to the " + RunProgram.currentLot + "!");
                    this.firstName.setText("");
                    this.lastName.setText("");
                    this.ID.setText("");
                } catch (IOException ex) {
                    Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (RunProgram.currentLot.equals("Bus Lot")) {
                File database = new File("ParkingSpots.accdb");
                Database db;
                try {
                    db = DatabaseBuilder.open(database);
                    Table busLot = db.getTable("Bus Lot");
                    RunProgram.busLot.assignSpot(student);
                    busLot.addRow("", student.getID(), student.getLastName(), student.getFirstName(), student.getParkingSpace());
                    JOptionPane.showMessageDialog(null, "Success!\n" + student.getFirstName() + " " + student.getLastName() + " has been added to the " + RunProgram.currentLot + "!");
                    this.firstName.setText("");
                    this.lastName.setText("");
                    this.ID.setText("");
                } catch (IOException ex) {
                    Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter a valid entry.");
        }
    }//GEN-LAST:event_addStudentActionPerformed

    private void addGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGroupActionPerformed
        if (canUse == true) {
            int num = in.nextInt();
            in.nextLine();
            Person[] students = new Person[num];
            for (int i = 0; i < num; i++) {
                String studentName = in.nextLine();
                String ID_num = in.nextLine();
                Person student = new Person(studentName, ID_num);
                students[i] = student;
            }
            if (RunProgram.currentLot.equals("North Lot")) {
                Map<String, Person> assignedSpots = RunProgram.northLot.createMap(students);
                File database = new File("ParkingSpots.accdb");
                Database db;
                try {
                    db = DatabaseBuilder.open(database);
                    Table northLot = db.getTable("North Lot");
                    String message = "";
                    for (Map.Entry<String, Person> s : assignedSpots.entrySet()) {
                        Person current = s.getValue();
                        message += current.getFirstName() + " " + current.getLastName() + "\n";
                        northLot.addRow("", current.getID(), current.getLastName(), current.getFirstName(), current.getParkingSpace());
                    }
                    JOptionPane.showMessageDialog(null, "Success! The following students were added to the " + RunProgram.currentLot + ":\n" + message);
                 

                } catch (IOException ex) {
                    Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (RunProgram.currentLot.equals("South Lot")) {
                Map<String, Person> assignedSpots = RunProgram.southLot.createMap(students, RunProgram.southLot.possibleSpaces);
                File database = new File("ParkingSpots.accdb");
                Database db;
                try {
                    db = DatabaseBuilder.open(database);
                    Table southLot = db.getTable("South Lot");
                    String message = "";
                    for (Map.Entry<String, Person> s : assignedSpots.entrySet()) {
                        Person current = s.getValue();
                        message += current.getFirstName() + " " + current.getLastName() + "\n";
                        southLot.addRow("", current.getID(), current.getLastName(), current.getFirstName(), current.getParkingSpace());
                    }
                    JOptionPane.showMessageDialog(null, "Success! The following students were added to the " + RunProgram.currentLot + ":\n" + message);
                    
                } catch (IOException ex) {
                    Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (RunProgram.currentLot.equals("Bus Lot")) {
                Map<String, Person> assignedSpots = RunProgram.busLot.createMap(students, RunProgram.busLot.possibleSpaces);
                File database = new File("ParkingSpots.accdb");
                Database db;
                try {
                    db = DatabaseBuilder.open(database);
                    Table busLot = db.getTable("Bus Lot");
                    String message = "";
                    for (Map.Entry<String, Person> s : assignedSpots.entrySet()) {
                        Person current = s.getValue();
                        message += current.getFirstName() + " " + current.getLastName() + "\n";
                        busLot.addRow("", current.getID(), current.getLastName(), current.getFirstName(), current.getParkingSpace());
                    }
                    JOptionPane.showMessageDialog(null, "Success! The following students were added to the " + RunProgram.currentLot + ":\n" + message);
                } catch (IOException ex) {
                    Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_addGroupActionPerformed

    private void ReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnButtonActionPerformed
        if (RunProgram.currentLot.equals("North Lot")) {
            try {
                RunProgram.northLot = new NorthLot();
                RunProgram.northLot.show();
            } catch (IOException ex) {
                Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (RunProgram.currentLot.equals("South Lot")) {
            try {
                RunProgram.southLot = new SouthLot();
                RunProgram.southLot.show();
            } catch (IOException ex) {
                Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (RunProgram.currentLot.equals("Bus Lot")) {
            try {
                RunProgram.busLot = new BusLot();
                RunProgram.busLot.show();
            } catch (IOException ex) {
                Logger.getLogger(addStudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        this.dispose();
        RunProgram.addInterface = new addStudent();
    }//GEN-LAST:event_ReturnButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new addStudent().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChooseFile;
    private javax.swing.JTextField ID;
    private javax.swing.JButton ReturnButton;
    private javax.swing.JButton addGroup;
    private javax.swing.JButton addStudent;
    private javax.swing.JTextField fileName;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField lastName;
    // End of variables declaration//GEN-END:variables
}
